// stylelint-disable block-closing-brace-newline-after

// Button color generator for primary and themed buttons

// New button hotness
@mixin btn-solid($color, $bg, $bg2) {
  color: $color;
  background-color: $bg2;
  background-image: linear-gradient(-180deg, $bg 0%, $bg2 90%);

  @if $bg == $gray-000 {
  
    &:hover,
    &.hover {
      background-color: darken($bg2, 3%);
      background-image: linear-gradient(-180deg, darken($bg, 3%) 0%, darken($bg2, 3%) 90%);
      background-position: 0 -$em-spacer-5;
      border-color: rgba($black, 0.35);
    }

    &:active,
    &.selected,
    [open] > & {
      background-color: darken(desaturate($bg, 10%), 6%);
      background-image: none;
      border-color: rgba($black, 0.35); // repeat to avoid shift on click-drag off of button
    }

    &:disabled,
    &.disabled {
      color: rgba($color, 0.4);
      background-color: $bg2;
      background-image: none;
      border-color: transparentize($black, 0.8); // back to default .btn
    }

  } @else {

    &:hover,
    &.hover {
      background-color: darken($bg2, 2%);
      background-image: linear-gradient(-180deg, darken($bg, 2%) 0%, darken($bg2, 2%) 90%);
      background-position: 0 -$em-spacer-5;
      border-color: $black-fade-50;
    }

    &:active,
    &.selected,
    [open] > & {
      background-color: darken(mix($bg, $bg2, 50%), 7%);
      background-image: none;
      border-color: $black-fade-50; // repeat to avoid shift on click-drag off of button
    }

    &:disabled,
    &.disabled {
      color: rgba($color, 0.75);
      background-color: mix($bg2, $white, 50%);
      background-image: none;
      border-color: transparentize($black, 0.8); // repeat .btn default to avoid shift on click-drag off of button
    }

    .Counter {
      color: darken($bg, 8%);
      background-color: $white;
    }
  }
}

// Inverse button hover style
@mixin btn-inverse($color, $bg, $bg2) {
  color: $color;
  background-color: $bg;
  background-image: linear-gradient(-180deg, $bg 0%, $bg2 90%);

  &:focus {
    box-shadow: 0 0 0 0.2em rgba($color, 0.4);
  }

  &:hover {
    color: $white;
    background-color: $color;
    background-image: linear-gradient(-180deg, lighten($color, 10%) 0%, $color 90%);
    border-color: $black-fade-50;
  }

  &:active,
  &.selected,
  [open] > & {
    color: $white;
    background-color: darken($color, 5%);
    background-image: none;
    border-color: $black-fade-50;
  }

  &:disabled,
  &.disabled {
    color: rgba($color, 0.4);
    background-color: $bg2;
    background-image: none;
    border-color: transparentize($black, 0.8); // back to default .btn
  }
}

// Outline color generator for btn-outline to make the hover state inverse the text and bg colors.
@mixin btn-outline($text-color: $blue, $bg-color: $white) {
  color: $text-color;
  background-color: $bg-color;
  background-image: none;

  &:hover,
  &:active,
  &.selected,
  [open] > & {
    color: $bg-color;
    background-color: $text-color;
    background-image: none;
    border-color: $text-color;
  }

  &:focus {
    border-color: $text-color;
  }

  &:disabled,
  &.disabled {
    color: $black-fade-30;
    background-color: $white;
    border-color: $black-fade-15;
  }
}